/**
 * @file
 * @author University of Warwick
 * @version 1.0
 *
 * @section LICENSE
 *
 * @section DESCRIPTION
 *
 * Contains declarations for the SparseMatrixSourceFileConfigJSON class
 */

#ifndef CUPCFD_DATA_STRUCTURES_SPARSE_MATRIX_SOURCE_FILE_CONFIG_JSON_INCLUDE_H
#define CUPCFD_DATA_STRUCTURES_SPARSE_MATRIX_SOURCE_FILE_CONFIG_JSON_INCLUDE_H

#include "Error.h"
#include "SparseMatrixSourceFileConfigSource.h"

// JsonCPP - Supplied as standalone in include/io/jsoncpp
#include "json.h"
#include "json-forwards.h"

#include <vector>

namespace cupcfd
{
	namespace data_structures
	{
		/**
		 * Defines a JSON access for configuring SparseMatrix sources from files.
		 *
		 * === Fields ===
		 *
		 * Required:
		 * FilePath: String. Define the relative/absolute path to where the file containing the mesh data can be found.
		 *
		 * FileFormat: String. Accepted values: "HDF5".
		 * Indicate the format of the file the mesh data is stored in.
		 *
		 * Optional:
		 * None
		 *
		 */
		template <class I, class T>
		class SparseMatrixSourceFileConfigJSON : public SparseMatrixSourceFileConfigSource<I,T>
		{
			public:
				// === Members ===

				/** Json Data Store containing fields for this JSON source **/
				Json::Value configData;

				// === Constructors/Deconstructors ===

				/**
				 * Parse the JSON record provided for values belonging to a SparseMatrixSource entry
				 *
				 * @param parseJSON The contents of a JSON record with the appropriate fields
				 */
				SparseMatrixSourceFileConfigJSON(Json::Value& parseJSON);

				/**
				 * Constructor:
				 * Copy values from source to this newly constructed object
				 *
				 * @tparam I The datatype of any indexing scheme used by the distribution
				 * @tparam T The datatype of the values generated by the distribution
				 */
				SparseMatrixSourceFileConfigJSON(const SparseMatrixSourceFileConfigJSON<I,T>& source);

				/**
				 * Deconstructor:
				 *
				 * @tparam I The datatype of any indexing scheme used by the distribution
				 * @tparam T The datatype of the values generated by the distribution
				 */
				~SparseMatrixSourceFileConfigJSON();

				// === Overloaded Methods ===

				__attribute__((warn_unused_result))
				cupcfd::error::eCodes getFilePath(std::string& filePath);

				__attribute__((warn_unused_result))
				cupcfd::error::eCodes getFileFormat(SparseMatrixFileFormat * format);

				void operator=(const SparseMatrixSourceFileConfigJSON<I,T>& source);

				__attribute__((warn_unused_result))
				SparseMatrixSourceFileConfigJSON<I,T> * clone();

				__attribute__((warn_unused_result))
				cupcfd::error::eCodes buildSparseMatrixSourceConfig(SparseMatrixSourceConfig<I,T> ** matrixSourceConfig);

		};
	}
}

// Include Header Level Definitions
#include "SparseMatrixSourceFileConfigJSON.ipp"

#endif
