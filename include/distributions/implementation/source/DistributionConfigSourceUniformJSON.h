/**
 * @file
 * @author University of Warwick
 * @version 1.0
 *
 * @section LICENSE
 *
 * @section DESCRIPTION
 *
 * Description
 *
 * Contains declarations for the DistributionConfigSourceFixed Class
 */

#ifndef CUPCFD_DISTRIBUTIONS_DISTRIBUTION_CONFIG_SOURCE_UNIFORM_JSON_INCLUDE_H
#define CUPCFD_DISTRIBUTIONS_DISTRIBUTION_CONFIG_SOURCE_UNIFORM_JSON_INCLUDE_H

// Error Codes
#include "Error.h"

#include "DistributionConfigSourceUniform.h"

// JsonCPP - Supplied as standalone in include/io/jsoncpp
#include "json.h"
#include "json-forwards.h"


namespace cupcfd
{
	namespace distributions
	{
		/**
		 * General Interface for retrieving information from a Distribution config data source
		 * for a DistributionConfigUniform.
		 *
		 * @tparam The datatype of any indexing scheme used by the distribution
		 * @tparam The datatype of the values generated by the distribution
		 */
		template <class I, class T>
		class DistributionConfigSourceUniformJSON : public DistributionConfigSourceUniform<I,T>
		{
			public:
				// === Members ===

				/**
				 * Json Storage of Data
				 */
				Json::Value configData;

				// === Constructors/Deconstructors ===

				/**
				 * Default Constructor
				 *
				 * @tparam The datatype of any indexing scheme used by the distribution
				 * @tparam The datatype of the values generated by the distribution
				 */
				DistributionConfigSourceUniformJSON(std::string configFilePath, std::string * topLevel, int nTopLevel);

				/**
				 * Parse the JSON record provided for values belonging to a UniformDistribution entry
				 *
				 * @param parseJSON The contents of a "UniformDistribution" JSON record (not the level above.)
				 */
				DistributionConfigSourceUniformJSON(Json::Value& parseJSON);

				/**
				 * Constructor:
				 * Copy values from source to this newly constructed object
				 *
				 * @tparam The datatype of any indexing scheme used by the distribution
				 * @tparam The datatype of the values generated by the distribution
				 */
				DistributionConfigSourceUniformJSON(const DistributionConfigSourceUniformJSON<I,T>& source);

				/**
				 * Deconstructor:
				 *
				 * @tparam The datatype of any indexing scheme used by the distribution
				 * @tparam The datatype of the values generated by the distribution
				 */
				virtual ~DistributionConfigSourceUniformJSON();

				// === Methods ===
				virtual void operator=(const DistributionConfigSourceUniformJSON<I,T>& source);
				virtual DistributionConfigSourceUniformJSON<I,T> * clone();
				__attribute__((warn_unused_result))
				virtual cupcfd::error::eCodes getLBound(T * lBound);
				__attribute__((warn_unused_result))
				virtual cupcfd::error::eCodes getUBound(T * lBound);
		};
	}
}

// Include Header Level Definitions
#include "DistributionConfigSourceUniformJSON.ipp"

#endif
